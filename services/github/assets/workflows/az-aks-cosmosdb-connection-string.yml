name: Load CosmosDB connection string

on: [push]

jobs:

  build:
 
    runs-on: ubuntu-latest
 
    steps:

    - name: Get connection string
      id: get-connection-string
      uses: 'docker://sixeyed/actions-cosmosdb-get-connection-string:latest'
      env:
        AZURE_SP_NAME: {{`${{ secrets.AZURE_SP_NAME }}`}}
        AZURE_SP_TENANT: {{`${{ secrets.AZURE_SP_TENANT }}`}}
        AZURE_SP_PASSWORD: {{`${{ secrets.AZURE_SP_PASSWORD }}`}}
        AZURE_RESOURCE_GROUP: {{range .Services}}{{if eq "azure" .ID}}{{.Parameters.region}}{{end}}{{end}}
        COSMOSDB_ACCOUNT_NAME: {{range .Services}}{{if eq "mongo" .ID}}{{.Parameters.accountName}}{{end}}{{end}}

    - name: Write Kubernetes secret 
      uses: 'docker://sixeyed/actions-aks-create-secret:latest'
      env:
        AZURE_SP_NAME: {{`${{ secrets.AZURE_SP_NAME }}`}}
        AZURE_SP_TENANT: {{`${{ secrets.AZURE_SP_TENANT }}`}}
        AZURE_SP_PASSWORD: {{`${{ secrets.AZURE_SP_PASSWORD }}`}}
        AZURE_RESOURCE_GROUP: {{range .Services}}{{if eq "azure" .ID}}{{.Parameters.resourceGroup}}{{end}}{{end}}
        AKS_CLUSTER_NAME: {{range .Services}}{{if eq "aks" .ID}}{{.Parameters.clusterName}}{{end}}{{end}}
        AKS_SECRET_NAME: mongo-connection-string
        AKS_SECRET_FILE_NAME: file
        AKS_SECRET_FILE_VALUE: {{`${{ steps.get-connection-string.outputs.connectionString }}`}}
